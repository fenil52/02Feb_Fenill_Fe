Q: 1 Are the HTML tags and elements the same thing?
----------------------------------------------------
HTML->
------
HTML Tags are building blocks of HTML Page. They tell the browser how it should display content to the user. A tag starts with a < bracket and ends with a > bracket. Most tags exist in pairs in HTML. Tags have an opening and closing part. They are similar, except the closing part has a / sign after the opening bracket.

ELEMENTS->
----------
HTML elements are individual components of HTML defined by HTML tags. At first glance, elements and tags can easily be mistaken for the same thing. But they are not. The key thing to remember is that elements are made up of tags, but tags are not made up of elements.

Q: 2 What are tags and attributes in HTML?
------------------------------------------

HTML Tags->
-----------------
	HTML tags are special keywords surrounded by a pair of angle brackets <tag keyword>. Most tags come in pairs, with an opening and closing tag. The closing tag is the same as an opening tag with the addition of a forward-slash. The closing bold tag looks like this </p>.

	HTML tags are almost like keywords where every single tag has unique meaning.

HTML Attributes->
-----------------
	HTML attributes are found only in the starting tag.

Q: 3 What are void elements in HTML? 
------------------------------------
 A void element is an element in HTML that cannot have any child nodes. Void elements only have a start tag; end tags must not be specified for void elements.

 Q: 4 What are HTML Entities?
 ----------------------------
 entities:
 -------
 An HTML entity is a piece of text ("string") that begins with an ampersand (&) and ends with a semicolon (;). Entities are frequently used to display reserved characters (which would otherwise be interpreted as HTML code), and invisible characters (like non-breaking spaces). You can also use them in place of other characters that are difficult to type with a standard.

  EX:- Many characters have memorable entities. For example, the entity for the copyright symbol (©) is &copy;

  Q: 5 What are different types of lists in HTML?
  ------------------------------------------------
  List in HTML helps to display a list of information semantically. 
  
->There are three types of lists in HTML:

Unordered list or Bulleted list (ul)
Ordered list or Numbered list (ol)
Description list or Definition list (dl)

Unordered list:-
---------------

-> An unordered list starts with the <ul> tag. Each list item starts with the <li> tag.
The list items will be marked with bullets (small black circles) by default:

Ordered List :-
---------------

 -> Ordered  lists are used to display a list of items that should be in a specific order. If the list items were moved around into a different order, the information would no longer make sense.
	Ordered lists can be displayed with several sequencing options. The default in most browsers is decimal numbers.As with unordered lists, you can use CSS to change the style of your ordered lists. 

 Description List :-
 -------------------

 -> Description lists (previously called definition lists, but renamed in HTML5) associate specific names and values within a list. Examples might be items in an ingredient list and their descriptions, article authors and brief bios, or competition winners and the years in which they won. You can have as many name-value groups as you like, but there must be at least one name and at least one value in each pair. 

-> Description lists use one set of <dl></dl> tags wrapped around one or more groups of <dt></dt> (name) and <dd></dd> (value) tags. You must pair at least one <dt></dt> with at least one <dd></dd>, and the <dt></dt> should always come first in the source order.

Q : 6 What is the ‘class’ attribute in HTML?
--------------------------------------------

 The class attribute specifies one or more classnames for an element. The class attribute is mostly used to point to a class in a style sheet.To create an HTML class, firstly define style for HTML class using <style> tag within <head> section as following example:

We have define style for a class name "headings", and we can use this class name with any of HTML element in which we want to provide such styling. We just need to follow the following syntax to use it.

<div class="ghf"> content </div> 

Q : 7 What is the difference between the ‘id’ attribute and the ‘class’ attribute of HTML elements?
----------------------------------------------------------------------------------------------------

 ID:-
 ----
In HTML, for an element, the ID name starts with the "#" symbol followed by a unique name assigned to it.
Only one ID selector can be attached to an element.he id attribute is a unique identifier that is used to specify the document.ID is unique in a page and can only apply to at most one element

 Class:-
 ------
The class attribute is used to specify one or more class names for an HTML element. The class attribute can be used on any HTML element. The class name can be used by CSS and JavaScript to perform certain tasks for elements with the specified class name.The class can be applied to multiple elements so it could be multiple times on a single page.


main difference :-
-----------------
 the only difference between them is that “id” is unique in a page and can only apply to at most one element, while “class” selector can apply to multiple elements. 
 
 Q: 8 What are the various formatting tags in HTML?

	HTML Formatting is a process of formatting text for better look and feel. HTML provides us ability to format text without using CSS. There are many formatting tags in HTML. These tags are used to make text bold, italic, or underlined. There are almost 14 options available that how text appears in HTML.
In HTML the formatting tags are divided into two categories:

1. <b>
->This is a physical tag, which is used to bold the text written between it.
2. <strong>
->This is a logical tag, which tells the browser that the text is important.
3. <i>
->This is a physical tag which is used to make text italic.
4. <em>
->This is a logical tag which is used to display content in italic.
5. <mark>
->This tag is used to highlight text.
6. <u>
->This tag is used to underline text written between it.
7. <tt>
->This tag is used to appear a text in teletype. (not supported in HTML5)
8. <strike>
->This tag is used to draw a strikethrough on a section of text. (Not supported in HTML5)
9. <sup>
->It displays the content slightly above the normal line.
10. <sub>
->It displays the content slightly below the normal line.
11. <del>
->This tag is used to display the deleted content.
12. <ins>
->This tag displays the content which is added
13. <big>
->This tag is used to increase the font size by one conventional unit.
14. <small>
->This tag is used to decrease the font size by one unit from base font size.


Q : 9 How is Cell Padding different from Cell Spacing?

Cellpadding --> Cellpadding basically defines the space present between a table cell’s border and the content present in it.

Cellspacing --> Cellspacing basically defines the space present between individual adjacent cells.

Cellpadding --> One can create it using the tag of HTML <table>, but it sets the type attribute to cellpadding.

Cellspacing --> One can create it using the tag of HTML <table>, but it sets the type attribute to cellspacing.

Cellpadding --> It deals with a single cell.

Cellspacing --> It gets subjected to multiple cells (more than one) at a time.

Cellpadding --> The default value for cellpadding is 1.

Cellspacing --> The default value for cellspacing is 2.

Cellpadding --> It is very effective as compared to cellspacing. Thus, it is very widely used.

Cellspacing --> It is comparatively less effective than cellpadding.

Q : 10 How can we club two or more rows or columns into a single row or column in an HTML table?
-------------------------------------------------------------------------------------------------

We use the colspan and rowspan attribute, to merge cells in HTML. The rowspan attribute is for the number of rows a cell should merge, whereas the colspan attribute is for the number of columns a cell should merge. The attribute should be placed inside the <td>.If we wanted to combine the first two cells in the first column, we could use the colspan="2" attribute in the first <td> tag. The number represents how many cells to use (merge) for the <td> tag, the first cell spans the width of two columns.

How to use rowspan attribute : if we wanted to combine the first two cells in the first column into one cell, we could use the rowspan="2" attribute in the first <td> tag. The number represents how many cells to use for the <td> tag, the first cell spans the height of two rows.

Q : 11 What is the difference between a block-level element and an inline element?
----------------------------------------------------------------------------------

Block Elements :

	The elements that begin on a new line are known as block elements. A block element takes up the full width of the content. They always start in a new line and have top and bottom margins. It does not contain any other elements next to it.

Inline-Block Elements :

	 Inline elements occupy only enough width that is sufficient to it and allows other elements next to it which are inline. Inline elements don’t start from a new line and don’t have top and bottom margins as block elements have.

Differences between Block-level element and Inline element :

 Block level elemant :
->  Block Elements occupy the full width irrespective of their sufficiency.
-> Block elements always start in a line.
-> Block elements doesn’t allow other elements to sit behind
-> Block elements have top and bottom margin.

 Inline element :
-> Inline elements occupy only sufficient width required.
-> Inline elements don’t start in a new line.
-> Inline elements allow other inline elements to sit behind.
-> Inline elements don’t have top and bottom margin 


QUESTION-12 :-What is the use of an iframe tag?

ANS:- The <iframe> tag in HTML is used to embed a separate HTML document within the current document. It allows you to display 
content from another source or website within your own web page.

The src attribute is used to specify the URL of the document that you want to embed within the <iframe> element. Here's an example:

<iframe src="https://www.example.com"></iframe>
In this example, the <iframe> element embeds the content of the URL "https://www.example.com" within the current document. This can 
be useful for displaying content such as maps, videos, or social media feeds from another website.

You can also specify other attributes to customize the appearance and behavior of the <iframe> element, such as width, height, 
scrolling, and frameborder. Here's an example:

<iframe src="https://www.example.com" width="500" height="400" scrolling="no" frameborder="0"></iframe>

In this example, the <iframe> element has a width of 500 pixels and a height of 400 pixels. The scrolling attribute is set to "no" 
to disable scrollbars within the embedded content. The frameborder attribute is set to "0" to remove the border around the <iframe> 
element.

It's important to note that embedding content from other websites within your own website can have potential security risks, as it 
can allow malicious content to be displayed within your web page. Therefore, it's recommended to only embed content from trusted 
sources, and to ensure that the <iframe> element is secure and properly configured.

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

QUESTION-13 :-What is the use of a span tag? Explain with example?

ANS:- The <span> tag in HTML is used to group inline elements and apply styles to them, without affecting the layout or structure of the 
document. It's typically used to apply styles such as color, font size, or text decoration to specific sections of text within a larger block 
of content.

Here's an example of how to use the <span> tag:

<p>Lorem ipsum dolor sit amet, <span style="color: red;">consectetur adipiscing elit</span>, sed do eiusmod tempor incididunt ut labore 
et dolore magna aliqua.</p>

In this example, the <span> tag is used to apply the color: red; style to the text "consectetur adipiscing elit". The <span> element does 
not add any additional layout or structure to the document, but simply applies the specified style to the enclosed text.

You can also use CSS to apply styles to <span> elements by defining a class or ID and targeting it with a CSS rule. Here's an example:

<p>Lorem ipsum dolor sit amet, <span class="highlight">consectetur adipiscing elit</span>, sed do eiusmod tempor incididunt ut labore et 
dolore magna aliqua.</p>

<style>
    .highlight {
        color: red;
        font-weight: bold;
    }
</style>

In this example, the <span> element is assigned a highlight class, which is targeted by the CSS rule to apply the color: red; and font-weight: 
bold; styles to the enclosed text. This allows you to apply consistent styles to multiple <span> elements throughout your document, without 
having to repeat the same inline styles for each one.

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

QUESTION-14 :-How to insert a picture into a background image of a web page?

ANS:- To insert a picture into a background image of a web page, you can use CSS to apply the background image and then use the HTML <img> 
tag to insert the picture. Here's an example:

<!DOCTYPE html>
<html>
<head>
	<title>Background Image with Picture</title>
	<style>
		body {
			background-image: url('background-image.jpg');
			background-repeat: no-repeat;
			background-size: cover;
			background-position: center;
		}
		
		img {
			position: absolute;
			top: 50%;
			left: 50%;
			transform: translate(-50%, -50%);
			max-width: 80%;
			max-height: 80%;
			border-radius: 50%;
			box-shadow: 5px 5px 10px rgba(0, 0, 0, 0.5);
		}
	</style>
</head>
<body>
	<img src="picture.jpg" alt="Picture">
</body>
</html>

In this example, the CSS background-image property is used to apply the background image to the body element of the document. 
The background-repeat, background-size, and background-position properties are also used to control the appearance of the background image.

The <img> tag is then used to insert the picture into the document. The CSS position, top, left, transform, max-width, max-height, 
border-radius, and box-shadow properties are used to position and style the picture within the background image.

Note that the picture is inserted as an independent element within the document, and is not actually inserted into the background image itself. 
The CSS properties are used to position the picture over the background image to create the illusion that the picture is part of the background.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

QUESTION-15 :-How are active links different from normal links? 

ANS:- Active links and normal links are two different states of a hyperlink in HTML.

A normal link is a hyperlink that has not been interacted with by the user. It is usually displayed as underlined text in a different color 
than the surrounding text. When the user clicks on the link, it becomes an active link.

An active link is a hyperlink that has been interacted with by the user. It is usually displayed as underlined text in a different color or 
with a different background color than the surrounding text. This helps the user to understand which links they have already clicked on.

In addition, a visited link is a hyperlink that the user has previously clicked on. By default, visited links are displayed in a different 
color than normal links and active links, to indicate that they have already been visited.

To define the appearance of normal, active, and visited links in HTML, you can use the following CSS pseudo-classes:

  :link - defines the style of unvisited links
  :visited - defines the style of visited links
  :hover - defines the style of links when the user hovers over them
  :active - defines the style of links when the user clicks on them
Here's an example of how to define the styles of normal, active, and visited links:

  a:link {
  color: blue;
  text-decoration: underline;
  }

  a:visited {
  color: purple;
  text-decoration: underline;
  }

  a:hover {
  color: red;
  text-decoration: none;
  }

  a:active {
  color: green;
  text-decoration: underline;
  }

In this example, unvisited links are displayed in blue with an underline, visited links are displayed in purple with an underline, hovered links 
are displayed in red without an underline, and active links are displayed in green with an underline.

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

QUESTION-16 :- What are the different tags to separate sections of text? 
------------------------------------------------------------------------

ANS:- In HTML, there are several tags that can be used to separate sections of text:

 1.<p> tag: The <p> tag is used to define paragraphs of text. It is typically used to group together several sentences or a single block of text.

 2.<h1> to <h6> tags: The <h1> to <h6> tags are used to define headings of different levels. They are typically used to indicate the structure
   of the document, with <h1> being the main heading and the other levels being subheadings.

 3.<div> tag: The <div> tag is used to define a division or section of a document. It is typically used to group together related elements or 
   to create a layout structure.

 4.<section> tag: The <section> tag is used to define a section of a document that is self-contained and can be understood on its own. It is 
   typically used to group together related content.

 5.<article> tag: The <article> tag is used to define a complete, independent, and self-contained piece of content. It is typically used to 
   represent blog posts, news articles, or other similar content.

 6.<aside> tag: The <aside> tag is used to define content that is related to the main content of the page but is not an integral part of it. 
   It is typically used to represent sidebars, notes, or other similar content.

 7.<blockquote> tag: The <blockquote> tag is used to define a section of quoted text. It is typically used to represent quotes from other 
   sources, such as books or articles.

These tags can be used in combination with each other to create a well-structured document with clearly defined sections of text.

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

QUESTION-17 :-What is SVG? 
---------------------------

ANS:-SVG stands for Scalable Vector Graphics. It is a file format for 2D graphics that uses XML to define the graphics elements. SVG files 
can be created with text editors or drawing software and are typically used for web graphics, icons, logos, and illustrations.

Unlike raster graphics formats such as JPEG and PNG, which use a grid of pixels to represent images, SVG graphics are defined by mathematical 
equations that describe the shapes, lines, and colors of the image. This means that SVG graphics can be scaled up or down without losing 
quality, and can be edited with ease.

SVG files can be embedded directly into HTML documents using the <svg> tag, or referenced as external files using the <img> tag. They can be 
styled with CSS, animated with JavaScript, and are compatible with most modern web browsers.

Some of the benefits of using SVG graphics include:

 ->They are resolution-independent, so they look sharp on any screen size or resolution.
 ->They can be animated and interactive, making them suitable for creating web animations and user interfaces.
 ->They are lightweight and have small file sizes, which helps improve website performance and load times.
 ->They can be easily edited and customized with text editors or drawing software.

Overall, SVG is a powerful and versatile file format for creating high-quality 2D graphics for the web.

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

QUESTION-18 :-What is difference between HTML and XHTML? 
---------------------------------------------------------

ANS:- HTML and XHTML are two different markup languages used to create web pages. The main differences between the two are:

  1.Syntax: HTML uses a more lenient syntax, while XHTML has a stricter syntax that follows the rules of XML. In XHTML, all elements and 
    attributes must be properly nested and closed, and all tags must be in lowercase.

  2.Doctype declaration: HTML has several different doctype declarations, while XHTML has only one. The doctype declaration tells the browser 
    which version of HTML or XHTML is being used, and affects how the browser parses the page.

  3.Self-closing tags: In HTML, some elements can be self-closing, while in XHTML, all elements must be closed with a closing tag or a 
    self-closing tag.

  4.Quoting attribute values: In HTML, attribute values can be quoted with either single or double quotes, while in XHTML, they must be quoted 
    with double quotes.

  5.Error handling: In HTML, the browser can often parse and display a page even if there are errors in the code, while in XHTML, even minor 
    errors can cause the page to fail to display.

Overall, XHTML is a stricter and more standardized version of HTML that follows the rules of XML. It was introduced to help create more 
interoperable and well-formed web pages. However, HTML is still widely used and remains the most common markup language for creating web pages.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

QUESTION-19 :-What are logical and physical tags in HTML? 
---------------------------------------------------------

ANS:- In HTML, logical tags refer to the semantic or meaning-based tags that describe the purpose of the content they contain. Physical tags, 
on the other hand, describe the visual appearance or presentation of the content.

Logical tags include tags like <h1> for headings, <p> for paragraphs, <ul> and <ol> for lists, and <table> for tables. These tags describe 
the meaning or purpose of the content they contain, which can be helpful for search engines, screen readers, and other assistive technologies.

Physical tags include tags like <font>, <center>, and <b> for changing the font size, color, alignment, and boldness of text. These tags 
describe the visual appearance of the content, but do not provide any information about the meaning or purpose of the content.

In general, it is recommended to use logical tags whenever possible, as they help create more accessible, semantic, and well-structured web 
pages. Physical tags, on the other hand, are generally considered outdated and are not recommended for use in modern HTML documents.




 